/*
 * Copyright (c) 2022 FlexiWAN
 *
 * List of features made for FlexiWAN (denoted by FLEXIWAN_FEATURE flag):
 *  - acl_based_classification: Feature to provide traffic classification using
 *  ACL plugin. Matching ACLs provide the service class and importance
 *  attribute. The classification result is marked in the packet and can be
 *  made use of in other functions like scheduling, policing, marking etc.
 *
 * This API file is added by the Flexiwan feature: acl_based_classification.
 */

/**
 * @file classifier_acls.api
 * @brief VPP control-plane API messages.
 *
 * This file defines VPP control-plane binary API messages which are generally
 * called through a shared memory interface.
 */

/* Version and type recitations */

option version = "0.1.0";
import "vnet/interface_types.api";


/** @brief API to enable / disable classifier_acls on an interface
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param enable_disable - 1/0 to enable/disable the feature on the interface
    @param sw_if_index - index of the interface to be enabled/disabled
*/

autoreply define classifier_acls_enable_disable {
    u32 client_index;
    u32 context;
    bool enable_disable;
    vl_api_interface_index_t sw_if_index;
};

/** \brief Set the ACLs identified using the given acl_list_id on the interface
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param is_add - Add/Delete the acl_list_id on the interface
    @param sw_if_index - the interface to alter the list of ACLs on
    @param acl_list_id - Unique id to represent a list of ACLs
*/

autoreply define classifier_acls_set_interface
{
  u32 client_index;
  u32 context;
  bool is_add;
  vl_api_interface_index_t sw_if_index;
  u32 acl_list_id;
};

/** \brief Setup the ACLs that defines the classification rules
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param acl_list_id - An unique id that represents a list of ACLs
    @param count - total number of ACL indices in the vector
    @param acls - vector of ACL indices
*/

autoreply define classifier_acls_set_acls
{
  u32 client_index;
  u32 context;
  u32 acl_list_id;
  u32 count;
  u32 acls[count];
};

